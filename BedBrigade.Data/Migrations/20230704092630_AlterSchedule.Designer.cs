// <auto-generated />
using System;
using BedBrigade.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BedBrigade.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230704092630_AlterSchedule")]
    partial class AlterSchedule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BedBrigade.Data.Models.Schedule", b =>
                {
                    // Event identification fields

                    b.Property<int>("ScheduleId")
                       .ValueGeneratedOnAdd()
                       .HasColumnType("int");
                        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));
                   
                    b.Property<int>("LocationId")
                         .IsRequired()
                         .HasColumnType("int");

                    // Event Description Fields

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventNote")
                     .HasMaxLength(4000)
                     .HasColumnType("nvarchar(4000)");

                    b.Property<string>("GroupName")
                       .HasMaxLength(50)
                       .HasColumnType("nvarchar(50)");

                    // Event Type & Status

                    b.Property<int>("EventType")    
                     .HasDefaultValue(0)
                     .HasColumnType("int");

                    b.Property<int>("EventType")
                      .HasDefaultValue(1)
                      .HasColumnType("int");

                    // Event Date
                    b.Property<DateTime?>("EventDateScheduled")
                      .IsRequired()
                      .HasColumnType("datetime2");

                    // Event Date
                    b.Property<DateTime?>("EventDateCompleted")                      
                      .HasColumnType("datetime2");

                    // Event Resources

                    b.Property<int>("VehiclesDeliveryMax")
                    .HasDefaultValue(0)
                    .HasColumnType("int");

                    b.Property<int>("VehiclesNormalMax")
                     .HasDefaultValue(0)
                     .HasColumnType("int");

                    b.Property<int>("VolunteersMax")
                    .HasDefaultValue(0)
                    .HasColumnType("int");

                    // System Fields

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MachineName")
                     .HasMaxLength(100)
                     .HasColumnType("nvarchar(100)");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
