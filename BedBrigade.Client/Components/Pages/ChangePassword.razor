@page "/change-password/{oneTimePassword:nonfile}/{encryptedEmail:nonfile}/"
@namespace BedBrigade.Client.Components.Pages
@using System.ComponentModel.DataAnnotations

<PageTitle>@($"{_lc.Keys["TheBedBrigade"]} | {_lc.Keys["ChangePassword"]}")</PageTitle>

<div class="container my-4">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">

            @if (_isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border" role="status" aria-label="Loading"></div>
                </div>
            }
            else if (!string.IsNullOrEmpty(_errorMessage))
            {
                <div class="alert alert-danger d-flex justify-content-between align-items-center" role="alert">
                    <span>@_errorMessage</span>
                    <a class="alert-link ms-2" href="/forgot-password">@_lc.Keys["ForgotPassword"]</a>
                </div>
            }
            else if (_success)
            {
                <div class="alert alert-success" role="alert">
                    @_lc.Keys["PasswordChanged"] <a class="alert-link" href="/login">@_lc.Keys["LogIn"]</a>.
                </div>
            }
            else if (_oneTimePasswordValid && _user is not null)
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h1 class="h4 mb-3">@_lc.Keys["ChangePassword"]</h1>

                        <EditForm EditContext="@EC">
                            

                            <div class="mb-3">
                                <label for="password" class="form-label">@_lc.Keys["NewPassword"]</label>
                                <InputText id="password"
                                           class="form-control"
                                           type="@(_showPassword ? "text" : "password")"
                                           @bind-Value="_model.Password"
                                           autocomplete="new-password" />
                                <div class="form-text">
                                    @_lc.Keys["RegularExpressionPassword"]
                                </div>
                                <ValidationMessage For="@(() => _model.Password)" />
                            </div>

                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">@_lc.Keys["ConfirmPassword"]</label>
                                <InputText id="confirmPassword"
                                           class="form-control"
                                           type="@(_showPassword ? "text" : "password")"
                                           @bind-Value="_model.ConfirmPassword"
                                           autocomplete="new-password" />
                                <ValidationMessage For="@(() => _model.ConfirmPassword)" />
                            </div>

                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="showPassword" @bind="_showPassword" />
                                <label class="form-check-label" for="showPassword">
                                    @_lc.Keys["ShowPassword"]
                                </label>
                            </div>

                            <button class="btn btn-primary" @onclick="(OnSubmitAsync)" disabled="@_isBusy">
                                @if (_isBusy)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                }
                                @_lc.Keys["ChangePassword"]
                            </button>
                        </EditForm>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
