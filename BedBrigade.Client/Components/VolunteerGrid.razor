@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using FilterType = Syncfusion.Blazor.Grids.FilterType
@using EditMode = Syncfusion.Blazor.Grids.EditMode
@using WrapMode = Syncfusion.Blazor.Grids.WrapMode
@using BedBrigade.Data.Models
@using BedBrigade.Common

@if (Volunteers == null)
{
    <span class="spinner-grow m-5"></span>
    <span>Loading ....</span>
}
else
{
    <fieldset class="m-4">
        <legend>Volunteers</legend>
        <div class="col-md-12 control-sec">
            <div class="content-wrapper">
                <div class="row">
                    <SfGrid @ref="Grid" TValue="Volunteer" DataSource=@Volunteers
                            ContextMenuItems=@ContextMenu
                            EnablePersistence="true"
                            ShowColumnChooser="true"
                            Toolbar=@ToolBar
                            AllowPaging="true"
                            AllowSorting="true"
                            AllowExcelExport="true"
                            ShowColumnMenu="true"
                            AllowFiltering="true"
                            AllowReordering="true"
                            AllowResizing="true"
                            AllowSelection="true"
                            AllowPdfExport="true"
                            AllowTextWrap="true"
                            AllowGrouping="true">
                        <GridTextWrapSettings WrapMode="WrapMode.Header" />
                        <GridPageSettings PageSizes="@(new int[]{5,10,15,20,25,50,100})" PageSize="15" />
                        <GridEvents DataBound=@DataBound Destroyed=@OnDestroyed OnLoad=@OnLoad OnToolbarClick=@OnToolBarClick OnActionBegin=@OnActionBegin TValue="Volunteer" />
                        <GridTemplates>
                            <EmptyRecordTemplate>
                                <span>@RecordText</span>
                            </EmptyRecordTemplate>
                        </GridTemplates>
                        <GridEditSettings Dialog=@DialogParams ShowDeleteConfirmDialog="true" Mode="@EditMode.Dialog">
                            <HeaderTemplate>
                                @{
                                    @HeaderTitle
                                  }
                            </HeaderTemplate>
                            <FooterTemplate>
                                <SfButton CssClass="btn btn-primary" OnClick=@(() => Save(context as Volunteer)) IsPrimary="true">@ButtonTitle</SfButton>
                                <SfButton OnClick="Cancel">Cancel</SfButton>
                            </FooterTemplate>
                            <Template>
                                @{
                                    Volunteer volunteer = (context as Volunteer)!;
                                    if (volunteer.LocationId == 0)
                                    {
                                        volunteer.LocationId = int.Parse(Identity.Claims.FirstOrDefault(c => c.Type == "LocationId").Value);
                                    }
                                    <div class="row">
                                        <div class="col-md-4">
                                            <SfDropDownList TItem="VolunteerFor" TValue="Int32" DataSource="VolunteersFor" @bind-Value=@volunteer.VolunteeringForId Enabled="true" Placeholder="Volunteers For" FloatLabelType="FloatLabelType.Auto">
                                                <DropDownListFieldSettings Text="Name" Value="VolunteerForId" />
                                            </SfDropDownList>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <SfTextBox ID="name" @bind-Value=@volunteer.FirstName Enabled="true" Placeholder="First Name" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                        <div class="col-md-4">
                                            <SfTextBox @bind-Value=@volunteer.LastName Enabled="true" Placeholder="Last Name" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                        <div class="form-group col-md-4">
                                            <SfTextBox @bind-Value=@volunteer.Email Enabled="true" Placeholder="Email" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <SfMaskedTextBox Mask="(000) 000-0000" @bind-Value=@volunteer.Phone Enabled="true" Placeholder="Phone" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                        <div class="col-md-4">
                                            <SfTextBox @bind-Value=@volunteer.OrganizationOrGroup Enabled="true" Placeholder="Organization" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                        <div class="col-md-4">
                                            <SfDropDownList TItem="Location" TValue="Int32" DataSource="Locations" @bind-Value=@volunteer.LocationId Readonly=@OnlyRead Enabled="true" Placeholder="Location" FloatLabelType="FloatLabelType.Auto">
                                                <DropDownListFieldSettings Text="Name" Value="LocationId" />
                                            </SfDropDownList>
                                        </div>
                                    </div>
                                    <div class="row">

                                    </div>
                                    <div class="row my-4">
                                        <div class="col-md-3">
                                            <SfCheckBox @bind-Checked=@volunteer.IHaveVolunteeredBefore Label="Previous Volunteer" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After" />
                                        </div>
                                        <div class="col-md-3 text-center">
                                            <SfCheckBox Name="MiniVan" @bind-Checked=@volunteer.IHaveAMinivan Label="Mini Van" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After" />
                                        </div>
                                        <div class="col-md-3 text-center">
                                            <SfCheckBox Name="SUV" @bind-Checked=@volunteer.IHaveAnSUV Label="SUV" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After" />
                                        </div>
                                        <div class="col-md-3 text-center">
                                            <SfCheckBox @bind-Checked=@volunteer.IHaveAPickupTruck Label="Pickup" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div>Notes</div>
                                        <div class="col-md-12">
                                            <SfRichTextEditor ID="note" @ref=@RteObject @bind-Value=@volunteer.Message EnableResize="true" Enabled="true" Height="300px">
                                                <RichTextEditorToolbarSettings Items=@Tools />
                                                <RichTextEditorEvents Created=@CreatedRte />
                                            </SfRichTextEditor>
                                        </div>
                                    </div>

                                }
                            </Template>
                        </GridEditSettings>
                        <GridFilterSettings Type="FilterType.CheckBox"></GridFilterSettings>
                        <GridSortSettings>
                            <GridSortColumns>
                                <GridSortColumn Field="LocationId" Direction="SortDirection.Ascending" />
                            </GridSortColumns>
                        </GridSortSettings>
                        <GridGroupSettings Columns=@groupColumns ShowDropArea="false" EnableLazyLoading="true" />
                        <GridColumns>
                            <GridColumn Field=@nameof(Volunteer.VolunteerId) IsPrimaryKey="true" Visible="false" ShowInColumnChooser="false" />
                            <GridForeignColumn Field=@nameof(Volunteer.VolunteeringForId) ForeignDataSource=@VolunteersFor ForeignKeyField="VolunteerForId" ForeignKeyValue="Name" ShowColumnMenu="false" HeaderText="Volunteers For" Type="ColumnType.String"AllowEditing="false" AllowFiltering="false" Width="110" />
                            <GridColumn Field=@nameof(Volunteer.FullName) ShowColumnMenu="false" HeaderText="Name" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" />
                            <GridColumn Field=@nameof(Volunteer.Email) ShowColumnMenu="false" HeaderText="Email" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false"/>
                            <GridColumn Field=@nameof(Volunteer.Phone) ShowColumnMenu="false" HeaderText="Phone" Format="(000) 000-0000" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false">
                                <Template>
                                    @{
                                        var request = (context as Volunteer);
                                        @request.Phone.FormatPhoneNumber();
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field=@nameof(Volunteer.OrganizationOrGroup) ShowColumnMenu="false" HeaderText="Organization" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false"/>
                            <GridForeignColumn Field=@nameof(Volunteer.LocationId) ForeignDataSource=@Locations ForeignKeyField="LocationId" ForeignKeyValue="Name" ShowColumnMenu="false" HeaderText="Volunteers At" Type="ColumnType.String" AllowEditing="false" AllowFiltering="true" />
                            <GridColumn HeaderText="Vehicle" HeaderTextAlign="TextAlign.Center" >
                                <GridColumns>                            
                                    <GridColumn Field=@nameof(Volunteer.IHaveAMinivan) ShowColumnMenu="false" Type="ColumnType.Boolean" HeaderText="Mini Van" AllowEditing="false" AllowFiltering="false" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" />
                                    <GridColumn Field=@nameof(Volunteer.IHaveAnSUV) ShowColumnMenu="false" Type="ColumnType.Boolean" HeaderText="SUV" AllowEditing="false" AllowFiltering="false" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" />
                                    <GridColumn Field=@nameof(Volunteer.IHaveAPickupTruck) ShowColumnMenu="false" Type="ColumnType.Boolean" HeaderText="Pickup" AllowEditing="false" AllowFiltering="false" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" />
                                </GridColumns>
                            </GridColumn>
                            <GridColumn Field=@nameof(Volunteer.IHaveVolunteeredBefore) ShowColumnMenu="false" Type="ColumnType.Boolean" HeaderText="Previous Volunteer" AllowEditing="false" AllowFiltering="false" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" Width="125" />
                            <GridColumn Field=@nameof(Volunteer.Message) HeaderText="Notes" Type="ColumnType.String" HeaderTextAlign="TextAlign.Left" ClipMode="ClipMode.EllipsisWithTooltip" AllowEditing="false" Width="100">
                                <Template>
                                    @{
                                        var volunteer = (context as Volunteer);
                                        @volunteer.Message.StripHTML();
                                    }
                                </Template>
                            </GridColumn>

                        </GridColumns>
                    </SfGrid>

                </div>
            </div>
        </div>
    </fieldset>
}
<SfToast ID="SaveToast" @ref=@ToastObj Title="@ToastTitle" Width="300" Timeout=@ToastTimeout Target="#TheToast" >
    <ToastPosition X="Center" Y="Top" ></ToastPosition>
</SfToast>

@if (NoPaging)
{
    <style>
        .e-pager {
            display: none;
        }
    </style>
}

<style>
    /***************************************** VolunteerGrid.razor.css ********************************************/

    .e-grid td.e-rowcell.e-focus.e-focused {
        box-shadow: none;
    }

    .e-grid th.e-headercell.e-focus.e-focused {
        box-shadow: none;
    }


    .e-toast-container {
        margin-top: 450px;
    }

        .e-toast-container .e-toast {
            border: 1px solid black;
            border-radius: 25px;
        }
            /*Use the following CSS to customize the default toast’s title properties like font-family, font-size and color.*/
            .e-toast-container .e-toast .e-toast-message .e-toast-title {
                color: deepskyblue;
                font-size: 18px;
                font-weight: bold;
                text-align: center;
            }
            /*Use the following CSS to customize the default toast’s content properties like font-family, font-size and color.*/
            .e-toast-container .e-toast .e-toast-message .e-toast-content {
                color: black;
                font-size: 14px;
                font-weight: bold;
                background-color: lightskyblue;
                padding: 5px;
                width: 100%;
                height: 50px;
                vertical-align: middle;
                text-align: center;
            }

    .e-dialog .e-dlg-header {
        font-size: 1.75rem;
        font-weight: 700;
    }

</style>