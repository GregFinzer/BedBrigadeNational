@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using FilterType = Syncfusion.Blazor.Grids.FilterType
@using EditMode = Syncfusion.Blazor.Grids.EditMode
@using WrapMode = Syncfusion.Blazor.Grids.WrapMode
@using BedBrigade.Data.Models
@using BedBrigade.Common

@if (Volunteers == null)
{
    <span class="spinner-border text-success m-5"></span>
    <span>Loading ....</span>
}
else
{
    <div class="row"><div class="col">&nbsp;</div></div>
    <div class="row">
        <div class="col-md-6">
            <h2>Volunteers</h2>
        </div>          
        <div class="col-md-6" style="text-align:right; font-size: small">
            <i class="fa fa-user-circle-o" aria-hidden="true"></i>&nbsp;@userRole&nbsp;
            @if (isLocationAdmin)
            {
                <span>[Location: @userLocationName]</span>
            }
            <br />@userName
        </div>
    </div>

    <div class="row">
            <div class="content-wrapper col-md-12" >               
                <div style="width: 100%">
                    <SfGrid @ref="Grid" TValue="Volunteer" DataSource=@Volunteers Width="100%"
                            ContextMenuItems=@ContextMenu
                            EnablePersistence="true"
                            ShowColumnChooser="true"
                            Toolbar=@ToolBar                           
                            AllowPaging="true"
                            AllowSorting="true"
                            AllowExcelExport="true"
                            ShowColumnMenu="true"
                            AllowFiltering="true"
                            AllowReordering="true"
                            AllowResizing="true"
                            AllowSelection="true"
                            AllowPdfExport="true"
                            AllowTextWrap="true"                            
                            AllowGrouping="true">
                        <GridTextWrapSettings WrapMode="WrapMode.Content" />
                        <GridPageSettings PageSizes="@(new int[]{5,10,15,20,25,50,100})" PageSize="15" />
                        <GridEvents DataBound=@DataBound Destroyed=@OnDestroyed OnToolbarClick=@OnToolBarClick OnActionBegin=@OnActionBegin TValue="Volunteer" />
                        <GridTemplates>
                            <EmptyRecordTemplate>
                                <span>@RecordText</span>
                            </EmptyRecordTemplate>
                        </GridTemplates>
                        <GridEditSettings 
                            AllowAdding="true"
                            AllowEditing="true"
                            AllowDeleting="true"
                            Dialog=@DialogParams 
                            ShowDeleteConfirmDialog="true" 
                            Mode="@EditMode.Dialog">
                            <HeaderTemplate>
                                @{
                                    @HeaderTitle
                                  }
                            </HeaderTemplate>
                            <FooterTemplate>
                                <button class="btn btn-primary"  @onclick=@(() => Save(context as Volunteer)) IsPrimary="true">@ButtonTitle</button>
                                <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                            </FooterTemplate>
                            <Validator>
                                     <DataAnnotationsValidator></DataAnnotationsValidator>
                            </Validator>
                            <Template>                               
                            @{
                                Volunteer volunteer = (context as Volunteer)!;
                                if (volunteer.LocationId == 0)
                                {
                                    volunteer.LocationId = userLocationId;
                                }

                                    <div class="row">
                                        <div class="col-md-4">
                                        <div class="form-group">
                                            <SfTextBox @bind-Value=@volunteer.FirstName Enabled="true" Placeholder="First Name" FloatLabelType="FloatLabelType.Auto" />
                                            <div style="font-size: smaller">
                                                <ValidationMessage For="@(() => volunteer.FirstName)"></ValidationMessage>
                                            </div>
                                        </div>                                          
                                        </div>
                                        <div class="col-md-4">
                                        <SfTextBox @bind-Value=@volunteer.LastName Enabled="true" Placeholder="Last Name" FloatLabelType="FloatLabelType.Auto" />
                                            <div style="font-size: smaller">
                                                <ValidationMessage For="@(() => volunteer.FirstName)"></ValidationMessage>
                                            </div>
                                        </div>
                                        <div class="form-group col-md-4">
                                            <SfTextBox @bind-Value=@volunteer.Email Enabled="true" Placeholder="Email" FloatLabelType="FloatLabelType.Auto" />
                                            <div style="font-size: smaller">
                                                <ValidationMessage For="@(() => volunteer.Email)"></ValidationMessage>
                                            <div style="display: @DisplayEmailMessage">
                                                    @BootstrapHelper.GetBootstrapMessage("warning", "This email is already registered.", "", false,"compact");
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <SfMaskedTextBox Mask="(000) 000-0000" @bind-Value=@volunteer.Phone Enabled="true" Placeholder="Phone" FloatLabelType="FloatLabelType.Auto" />
                                            <div style="font-size: smaller">
                                                <ValidationMessage For="@(() => volunteer.Phone)"></ValidationMessage>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <SfTextBox @bind-Value=@volunteer.OrganizationOrGroup Enabled="true" Placeholder="Organization" FloatLabelType="FloatLabelType.Auto" />
                                        </div>
                                        <div class="col-md-4">
                                            <SfDropDownList TItem="Location" TValue="Int32" DataSource="Locations" @bind-Value=@volunteer.LocationId Readonly=@OnlyRead Enabled="true" Placeholder="Location" FloatLabelType="FloatLabelType.Auto">
                                                <DropDownListFieldSettings Text="Name" Value="LocationId" />
                                            </SfDropDownList>
                                            <div style="font-size: smaller">
                                                <ValidationMessage For="@(() => volunteer.LocationId)"></ValidationMessage>                                            
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                    </div>
                                    <div class="row my-4">
                                        <div class="col-md-4">
                                            <SfCheckBox @bind-Checked=@volunteer.IHaveVolunteeredBefore Label="Previous Volunteer" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After" />
                                        </div>
                                        <div class="col-md-8 text-center">
                                           <SfRadioButton Label="@EnumHelper.GetEnumDescription(Common.VehicleType.NoCar)" Name="RadioBtn" Value="@Common.VehicleType.NoCar.ToString()" @bind-checked="volunteer.VehicleType" TChecked="VehicleType"></SfRadioButton>
                                        </div>                                   
                                     </div>
                                     <div class="row">
                                         <div class="col-md-4 text-center">
                                           <SfRadioButton Label="@EnumHelper.GetEnumDescription(Common.VehicleType.Minivan)" Name="RadioBtn" Value="@Common.VehicleType.Minivan.ToString()" @bind-checked="volunteer.VehicleType" TChecked="VehicleType"></SfRadioButton>
                                                    @BootstrapHelper.GetBootstrapMessage("info", "Minivan with seats removed or folded into the floor (Honda Odyseey, Toyota Sienna, Chrysler Pacifica, Kia Carnival, etc.)","", false, "compact")
                                         </div>
                                        <div class="col-md-4 text-center">
                                            <SfRadioButton Label="@EnumHelper.GetEnumDescription(Common.VehicleType.SUV)" Name="RadioBtn" Value="@Common.VehicleType.SUV.ToString()" @bind-checked="volunteer.VehicleType" TChecked="VehicleType"></SfRadioButton>
                                                @BootstrapHelper.GetBootstrapMessage("info", "Chevrolet Suburban, Chevrolet Tahoe, Ford Expedition, GMC Yukon, Toyota Sequoia, Nissan Armada, etc.","", false, "compact")
                                        </div>
                                        <div class="col-md-4 text-center">
                                            <SfRadioButton Label="@EnumHelper.GetEnumDescription(Common.VehicleType.Truck)" Value="@Common.VehicleType.Truck.ToString()" Name="RadioBtn" @bind-checked="volunteer.VehicleType" TChecked="VehicleType"></SfRadioButton>
                                                @BootstrapHelper.GetBootstrapMessage("info", "A pickup truck with a camper shell or with a canopy.","", false, "compact")
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <fieldset class="border rounded-3 p-1">
                                                <legend class="float-none w-auto p-1" style="font-size: small"><b>Note / Comment / Message</b></legend>
                                                <div class="control-wrapper">
                                                    <SfTextBox ID="EventNote" @bind-Value=@volunteer.Message Enabled="true" Placeholder="Volunteer Message" Multiline="true" HtmlAttributes="@DescriptionHtmlAttribute" CssClass="@cssClass" />
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>                                   
                                }                               
                            </Template>
                        </GridEditSettings>
                        <GridFilterSettings Type="FilterType.CheckBox"></GridFilterSettings>
                        <GridSortSettings>
                            <GridSortColumns>
                                <GridSortColumn Field="LocationId" Direction="SortDirection.Ascending" />
                            </GridSortColumns>
                        </GridSortSettings>
                        <GridGroupSettings ShowDropArea="true" EnableLazyLoading="true" />
                        <GridColumns>
                        <GridColumn Field=@nameof(Volunteer.VolunteerId) HeaderText="ID" TextAlign="TextAlign.Right" IsPrimaryKey="true" AutoFit="true" AllowFiltering="false" AllowEditing="false" AllowAdding="false"></GridColumn>
                        <GridForeignColumn Field=@nameof(Volunteer.LocationId) ForeignDataSource=@Locations ForeignKeyField="LocationId" ForeignKeyValue="Name" ShowColumnMenu="true" HeaderText="Location" Type="ColumnType.String" AllowEditing="false" AllowGrouping="true" AllowFiltering="true" AutoFit="true" />
                        <GridColumn Field=@nameof(Volunteer.FullName) ShowColumnMenu="false" HeaderText="Name" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="200px"    />
                            <GridColumn Field=@nameof(Volunteer.Email) ShowColumnMenu="false" HeaderText="Email" Type="ColumnType.String" AllowEditing="false"  AllowFiltering="false" Width="250px"   />
                            <GridColumn Field=@nameof(Volunteer.Phone) ShowColumnMenu="false" HeaderText="Phone" Format="(000) 000-0000" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="150px"  >
                                <Template>
                                    @{
                                        var request = (context as Volunteer);
                                        @request.Phone.FormatPhoneNumber();
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field=@nameof(Volunteer.OrganizationOrGroup) ShowColumnMenu="false" HeaderText="Organization" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="300px" />                                                  
                            <GridForeignColumn Field=@nameof(Volunteer.VehicleType) ForeignDataSource=@lstVehicleTypes ForeignKeyField="Value" ForeignKeyValue="Name" ShowColumnMenu="false" HeaderText="Vehicle Type" Type="ColumnType.String" AllowEditing="false"  AllowGrouping="false" AllowFiltering="false" Width="200px"  />                        
                            <GridColumn Field=@nameof(Volunteer.IHaveVolunteeredBefore) ShowColumnMenu="false" Type="ColumnType.Boolean" HeaderText="Previous Volunteer" AllowEditing="false" AllowFiltering="false" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" Width="125px" />
                            <GridColumn Field=@nameof(Volunteer.Message) HeaderText="Notes" Type="ColumnType.String" HeaderTextAlign="TextAlign.Left" ClipMode="ClipMode.EllipsisWithTooltip" ShowColumnMenu="false" AllowEditing="false" AllowFiltering="false" Width="800px" />
                         </GridColumns>
                    </SfGrid>
                 </div>
                </div>
            </div>     
}
<SfToast ID="SaveToast" @ref=@ToastObj Title="@ToastTitle" Width="300" Timeout=@ToastTimeout Target="#TheToast" >
    <ToastPosition X="Center" Y="Top" ></ToastPosition>
</SfToast>

@ErrorMessage

@if (NoPaging)
{
    <style>
        .e-pager {
            display: none;
        }
    </style>
}

<style>
    /***************************************** VolunteerGrid.razor.css ********************************************/

    .e-grid td.e-rowcell.e-focus.e-focused {
        box-shadow: none;
    }

    .e-grid th.e-headercell.e-focus.e-focused {
        box-shadow: none;
    }


    .e-toast-container {
        margin-top: 450px;
    }

        .e-toast-container .e-toast {
            border: 1px solid black;
            border-radius: 25px;
        }
            /*Use the following CSS to customize the default toast’s title properties like font-family, font-size and color.*/
            .e-toast-container .e-toast .e-toast-message .e-toast-title {
                color: deepskyblue;
                font-size: 18px;
                font-weight: bold;
                text-align: center;
            }
            /*Use the following CSS to customize the default toast’s content properties like font-family, font-size and color.*/
            .e-toast-container .e-toast .e-toast-message .e-toast-content {
                color: black;
                font-size: 14px;
                font-weight: bold;
                background-color: lightskyblue;
                padding: 5px;
                width: 100%;
                height: 50px;
                vertical-align: middle;
                text-align: center;
            }

    .e-dialog .e-dlg-header {
        font-size: 1.75rem;
        font-weight: 700;
    }

</style>