@using System.Security.Claims;
@using BedBrigade.Client.Services;
@using BedBrigade.Data.Models;
@using BedBrigade.Common;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Authorization;
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Notifications;
@using System.Security.Claims;
@using Action = Syncfusion.Blazor.Grids.Action;
@using static BedBrigade.Common.Common;
@using BedBrigade.Client.Pages.Administration.Manage;
@using System.Data;
@using BedBrigade.Client.Pages.Home;

<SfRichTextEditor @ref=@RTE EditorMode="EditorMode.HTML">
    @((MarkupString)Body)
</SfRichTextEditor>

@code {
    [Inject] public IContentService _svcContent { get; set; }
    [Inject] private AuthenticationStateProvider? _authState { get; set; }
    [Inject] private NavigationManager _nv { get; set; }

    [Parameter] public string ContentType { get; set; }

    private SfRichTextEditor RTE { get; set; }
    private ClaimsPrincipal? Identity { get; set; }
    private string Body { get; set; }

    protected override async Task OnInitializedAsync()
    {   

        var authState = await _authState.GetAuthenticationStateAsync();
        Identity = authState.User;
        if (Identity.HasRole(RoleNames.CanManagePages))
        {
        }
        else
        {
        }
        string[] pageParameters = _nv.Uri.Split('/');
        var result = await _svcContent.GetAsync("HomePageBody", 1);
        if(result.Success)
        {
            Body = result.Data.ContentHtml;
            Body += "<style> @import 'css/bedbrigade/theme.css'; </style>";

        }
    }

}
