@using BedBrigade.Common.Models
@if (!DataStatus)
{   <div class="row"><div class="col">&nbsp;</div></div>
     <div class="row ustify-content-center" >
         <div class="col">
           @EvolHelper.GetEvolDataStatusMessage(lstEmptyTables)
         </div>
     </div>
}

@if (DataStatus) 
{
            <div class="row"><div class="col">&nbsp;</div></div>
            <div class="row" style="display: @GridDisplay">
                <div class="col-md-3" style="white-space: nowrap">
                    <h3>Manage Event's Volunteers</h3>           
                </div>     
                <div class="col-md-4 align-items-center" >
                    <div class="form-group">
                    <label for="VolunteerSelector" style="display: inline-block;">Future Scheduled</label>
                    <SfDropDownList id="VolunteerSelector" CssClass="periodselector" TValue="string" TItem="GridFilterOption" Placeholder="Select a grid filter" DataSource="@GridDefaultFilter" @bind-Value="@DefaultFilter" Width="300px"   >
                        <DropDownListEvents TItem="GridFilterOption" TValue="string" ValueChange="OnFilterChange" ></DropDownListEvents>
                        <DropDownListFieldSettings Value="ID" Text="Text" ></DropDownListFieldSettings>
                    </SfDropDownList>
                    </div>
                </div>
                <div class="col-md-3">
                    @BootstrapHelper.GetBootstrapMessage("info", "You cannot manage Bed Brigade events on this page. Please use 'Schedules' page in Administration Manage.", "", false,"compact")
                </div>
                <div class="col-md-2" style="text-align:right; font-size: small">
                    <i class="fa fa-user-circle-o" aria-hidden="true"></i>&nbsp;@userRole&nbsp;
                    @if (IsLocationAdmin)
                    {
                        <span>[Location: @userLocationName]</span>
                    }
                    <br />@userName
                </div>
            </div>

          <div class="row" style="display: @GridDisplay">
                    <div class="content-wrapper col-md-12" >               
                        <div style="width: 100%">
                            <SfGrid @ref="Grid" TValue="Volunteer"
                                    DataSource=@EventVolunteers 
                                    Width="100%"                           
                                    EnablePersistence="true"
                                    ShowColumnChooser="true"
                                    Toolbar=@Toolbaritems                           
                                    AllowPaging="true"
                                    AllowSorting="true"
                                    AllowExcelExport="true"
                                    ShowColumnMenu="true"
                                    AllowFiltering="true"
                                    AllowReordering="true"
                                    AllowResizing="true"
                                    AllowSelection="true"
                                    AllowPdfExport="true"
                                    AllowTextWrap="true"                            
                                    AllowGrouping="true">
                       
                                    <GridTextWrapSettings WrapMode="Syncfusion.Blazor.Grids.WrapMode.Content" />
                                    <GridPageSettings PageSizes="@(new int[]{5,10,15,20,25,50,100})" PageSize="15" />
                                    <GridEvents Destroyed=@OnDestroyed OnLoad=@OnLoad OnToolbarClick="ToolbarClickHandler" TValue="Volunteer" RowSelected="GetSelectedRecords" ></GridEvents>   
                                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single" ></GridSelectionSettings>
                                             
                                <GridTemplates>
                                    <EmptyRecordTemplate>
                                        <span>@RecordText</span>
                                    </EmptyRecordTemplate>
                                </GridTemplates>
                                                  
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
                        
                                <GridSortSettings>
                                    <GridSortColumns>
                                        <GridSortColumn Field="LocationId" Direction="SortDirection.Ascending" />
                                    </GridSortColumns>
                                </GridSortSettings>
                        
                                <GridGroupSettings ShowDropArea="true" EnableLazyLoading="true" />
                                <GridColumns>
                       
                                <GridColumn Field=@nameof(Volunteer.EvolId) Visible="@displayId" IsPrimaryKey="true" HeaderText="PRID" TextAlign="TextAlign.Left"  AutoFit="true" AllowFiltering="true" AllowEditing="false" AllowAdding="false"></GridColumn>
                                <GridColumn Field=@nameof(Volunteer.RegistrationId) Visible="@displayId" HeaderText="Reg ID" TextAlign="TextAlign.Right"  AutoFit="true" AllowFiltering="true" AllowEditing="false" AllowAdding="false"></GridColumn>
                                <GridColumn Field=@nameof(Volunteer.EventLocationId) Visible="@displayId" HeaderText="Loc ID" TextAlign="TextAlign.Right"  AutoFit="true" AllowFiltering="true" AllowEditing="false" AllowAdding="false"></GridColumn>
                                <GridColumn Field=@nameof(Volunteer.EventLocationName)  HeaderText="Location Name" Type="ColumnType.String" AllowEditing="false" AllowFiltering="true" Width="200px" AllowSorting="true"    />
                                <GridColumn Field=@nameof(Volunteer.EventId)  Visible="@displayId" HeaderText="Event ID" TextAlign="TextAlign.Right"  AutoFit="true" AllowFiltering="true" AllowEditing="false" AllowAdding="false"></GridColumn>
                                <GridColumn Field=@nameof(Volunteer.EventName) HeaderText="Event Name" Type="ColumnType.String" AllowEditing="false" AllowFiltering="true" Width="200px" AllowSorting="true"    />
                                <GridColumn Field=@nameof(Volunteer.EventDate) HeaderText="Event Date" Type="ColumnType.String" AllowEditing="false" AllowFiltering="true" Width="200px"   >
                                    <Template>
                                        @{
                                            var request = (context as Volunteer);
                                            @DateUtil.GetFormattedDateTime(request.EventDate);
                                        }
                                    </Template>
                                </GridColumn>
                                <GridColumn Field=@nameof(Volunteer.VolunteerId)  Visible="@displayId" HeaderText="Vol ID" TextAlign="TextAlign.Right" IsPrimaryKey="true" AutoFit="true" AllowFiltering="false" AllowEditing="false" AllowAdding="false"></GridColumn>                        
                                <GridColumn Field=@nameof(Volunteer.FullName)  HeaderText="Volunteer Name" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="200px"  AllowSorting="true"   />
                                    <GridColumn Field=@nameof(Volunteer.Email)  HeaderText="Email" Type="ColumnType.String" AllowEditing="false"  AllowFiltering="false" Width="250px"   />
                                    <GridColumn Field=@nameof(Volunteer.Phone)  HeaderText="Phone" Format="(000) 000-0000" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="150px"  >
                                        <Template>
                                            @{
                                                var request = (context as Volunteer);
                                                @request.Phone.FormatPhoneNumber();
                                            }
                                        </Template>
                                    </GridColumn>
                                    <GridColumn Field=@nameof(Volunteer.OrganizationOrGroup)  HeaderText="Organization" Type="ColumnType.String" AllowEditing="false" AllowFiltering="false" Width="300px" />                                                  
                                    <GridForeignColumn Field=@nameof(Volunteer.VehicleType) ForeignDataSource=@lstVehicleTypes ForeignKeyField="Value" ForeignKeyValue="Name" HeaderText="Vehicle Type" Type="ColumnType.String" AllowEditing="false"  AllowGrouping="false" AllowFiltering="false" Width="200px"  />                        
                                    <GridColumn Field=@nameof(Volunteer.IHaveVolunteeredBefore)  Type="ColumnType.Boolean" HeaderText="Previous Volunteer" AllowEditing="false" AllowFiltering="true" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" Width="125px" />
                                    <GridColumn Field=@nameof(Volunteer.Message) HeaderText="Notes" Type="ColumnType.String" HeaderTextAlign="TextAlign.Left" ClipMode="ClipMode.EllipsisWithTooltip"  AllowEditing="false" AllowFiltering="false" Width="800px" />
                                 </GridColumns>
                            </SfGrid>
                         </div>
                        </div>
                   </div>           
        }

        @if (ShowEditDialog)
        {
            <div class="modal" tabindex="-1" role="dialog" style="display: @(ShowEditDialog ? "block" : "none")">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">@DialogTitle</h5>                    
                        </div>
                        @AvailabilityMessage
                         <div class="modal-body"  style="display: @DisplaySearchPanel">               
                           <SfTab>
                            <TabItems>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="Choose"></TabHeader>
                                    </ChildContent>                           
                                   <ContentTemplate>
                                            <SfDropDownList TValue="string" TItem="Volunteer" Placeholder="Select a Volunteer" DataSource="@lstLocationVolunteers" >
                                                <DropDownListFieldSettings Value="VolunteerId" Text="SearchName"></DropDownListFieldSettings>
                                                <DropDownListEvents TItem="Volunteer" TValue="string"  ValueChange="OnVolunteerSelect" ></DropDownListEvents>
                                            </SfDropDownList>
                                    </ContentTemplate>
                                </TabItem>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="Search"></TabHeader>
                                    </ChildContent>
                                    <ContentTemplate>
                                         <SfAutoComplete TValue="string" TItem="Volunteer" Placeholder="Seach a Volunteer by Name" DataSource="@lstLocationVolunteers" >                      
                                                <AutoCompleteFieldSettings Value="SearchName" ></AutoCompleteFieldSettings>          
                                                <AutoCompleteEvents TValue="string" TItem="Volunteer" ValueChange="OnVolunteerSelect" ></AutoCompleteEvents> 
                                        </SfAutoComplete>      
                                    </ContentTemplate>
                                </TabItem>
                            </TabItems>
                            </SfTab>
                        </div>
                        <div class="modal-body"  style="display: @DisplayDataPanel">
                            <div class="row">
                                <div class="col" >
                                    <div class="card" >
                                        <div class="card-title" style="text-align: center;  background-color: #DEDEDE"><b>Event</b></div>
                                         <div class="card-body">
                                             <table class="table table-striped table-sm">
                                               <tr style="display: @displayId">
                                                    <td style="vertical-align: top" >EventID:</td>
                                                    <th style="vertical-align: top" >@selectedGridObject.EventId</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Location:</td>
                                                    <th style="vertical-align: top" >@StringUtil.IsNull(selectedGridObject.EventLocationName,"")</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Name:</td>
                                                    <th style="vertical-align: top" >@selectedGridObject.EventName</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Date:</td>
                                                    <th style="vertical-align: top" >@DateUtil.GetFormattedDateTime(selectedGridObject.EventDate)</th>
                                                </tr>
                                             </table>
                                         </div>
                                    </div>
                                </div>
                                 <div class="col" >
                                    <div class="card" >
                                        <div class="card-title" style="text-align: center; background-color: #DEDEDE"><b>Volunteer</b></div>
                                         <div class="card-body">
                                               <table class="table table-striped table-sm" style="display: @displayVolunteerData">
                                                   @if(newVolunteer.RegistrationId>0){
                                                       <tr style="display: @displayId">
                                                            <td style="vertical-align: top" >RegistrationID:</td>
                                                            <th style="vertical-align: top" >@newVolunteer.RegistrationId</th>
                                                        </tr>
                                                   }
                                                <tr style="display: @displayId">
                                                    <td style="vertical-align: top" >VolunteerID:</td>
                                                    <th style="vertical-align: top" >@newVolunteer.VolunteerId</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Name:</td>
                                                    <th style="vertical-align: top" >@newVolunteer.FullName</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Phone:</td>
                                                    <th style="vertical-align: top; white-space: nowrap" >@newVolunteer.Phone.FormatPhoneNumber()</th>
                                                </tr>
                                                <tr>
                                                    <td style="vertical-align: top" >Email:</td>
                                                    <th style="vertical-align: top" >@newVolunteer.Email</th>
                                                 </tr>                                         
                                                 <tr>
                                                    <td style="vertical-align: top; white-space: nowrap" >Vehicle Type:</td>      
                                                    <th style="vertical-align: top" >@EnumHelper.GetEnumDescription(newVolunteer.VehicleType)</th>
                                                </tr>                                      
                                             </table>

                                         </div>
                                    </div>
                                </div> 
                            </div>
                        </div>
                        <div class="modal-body">
                            @DialogMessage
                        </div>
                        <div class="modal-footer">
                            <button type="button"  style="display: @DisplayAddButton" class="btn btn-primary" @onclick="@(()=> onConfirmAdd())">OK</button>&nbsp;     
                             <button type="button"  style="display: @DisplayDeleteButton" class="btn btn-primary" @onclick="@(()=> onConfirmDelete())">OK</button>&nbsp;     
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@(()=> this.ShowEditDialog=false)">@CloseButtonCaption</button>                 
                        </div>
                    </div>
                </div>
            </div>
            }


@testString
@ErrorMessage
@((MarkupString)strHtml)