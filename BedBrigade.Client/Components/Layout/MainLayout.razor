@inherits LayoutComponentBase
@using BedBrigade.Client.Services
@inject IWebHostEnvironment HostEnvironment
<CustomErrorBoundary @ref=errorBoundary>
    <div class="">
        <Header></Header>

        <main>
            <article class="content px-4">
                
                @Body
                
            </article>
        </main>
        <Footer></Footer>
    </div>
</CustomErrorBoundary>

@code {
    [Inject] Microsoft.Extensions.Hosting.IHostingEnvironment _env { get; set; }
    [Inject] private IAuthService AuthService { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private IJSRuntime _js { get; set; }

    private ErrorBoundary errorBoundary;

    protected override void OnParametersSet()
    {
        errorBoundary?.Recover();
        base.OnParametersSet();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //A hard refresh or the user just navigated to the application for the first time
        if (firstRender && !AuthService.IsLoggedIn)
        {
            var url = NavigationManager.ToAbsoluteUri(NavigationManager.Uri).ToString();
            if (url.Contains("/login"))
            {
                return;
            }

            var restoredFromState = await AuthService.GetStateFromTokenAsync();
            //The user lost their server side session, but still has a valid JWT
            if (restoredFromState)
            {
                NavigationManager.Refresh();
            }
        }

        
        //Collapse the mobile menu
        await _js.InvokeVoidAsync("AddRemoveClass.RemoveClass", "navbarResponsive", "show");
    }

}