@page "/home/grid"
@using System.ComponentModel.DataAnnotations
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs

<h3>Grid - Employee: @EmployeeData.Count()</h3>

@if (EmployeeData == null)
{
    <span class="spinner-grow m-5"></span><span>Loading ....</span>
}
else
{

    <SfGrid @ref=@EmpGrid DataSource="@EmployeeData" Toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Search" })">
        <GridEditSettings AllowEditing="true" AllowAdding="true" AllowDeleting="true" Mode="Syncfusion.Blazor.Grids.EditMode.Dialog">
            <HeaderTemplate>
                @{
                    <span>Employee</span>
                }
            </HeaderTemplate>
            <FooterTemplate>
                <SfButton CssClass="btn btn-primary" OnClick=@(() => Save(context as Employee)) IsPrimary="true">Update</SfButton>
                <SfButton OnClick="Cancel">Cancel</SfButton>
            </FooterTemplate>
            <Template>
                @{
                    var rec = (context as Employee);

                    <div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <SfTextBox @bind-Value=@rec.Name Placeholder="Name" />
                            </div>
                            <div class="form-group col-md-6">
                                <SfTextBox @bind-Value=@rec.Designation Placeholder="Designation" />
                            </div>
                        </div>
                    </div>
                 }
            </Template>
        </GridEditSettings>
        <GridTemplates>
            <EmptyRecordTemplate>
                <span>@RecordText</span>
            </EmptyRecordTemplate>
        </GridTemplates>
        <GridColumns>
            <GridColumn Field="@nameof(Employee.Name)" HeaderText="Employee Name" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(Employee.Designation)" HeaderText="Designation" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(Employee.DOJ)" HeaderText="Hire Date" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(Employee.Salary)" HeaderText="Salary" TextAlign="TextAlign.Center"></GridColumn>
        </GridColumns>
    </SfGrid>
}
@code {
    public SfGrid<Employee> EmpGrid { get; set; }

    public class Employee
    {
        public int EmployeeId { get; set; }
        [Required]
        public string Name { get; set; }
        [Required]
        public string Designation { get; set; }
        public DateTime DOJ { get; set; }
        public double Salary { get; set; }
    }

    public List<Employee> EmployeeData { get; set; }
    public string RecordText { get; set; } //= "Loading records ...";

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(10000);
        EmployeeData = Enumerable.Range(1, 15).Select(x => new Employee()
        {
            EmployeeId = 1000 + x,
            Name = (new String[] { "Alfki", "Anantr", "Anton", "Blomp", "Bolid" })[new Random().Next(5)],
            Designation = (new String[] { "CMBKIO", "ERIPO", "EWOPHL", "WWIOPP", "MLOPSS" })[new Random().Next(5)],
            DOJ = DateTime.Now.AddDays(-x),
            Salary = 2000 * x,
        }).ToList();

        //if (EmployeeData.Count == 0) RecordText = "No records found";

    }

    protected async Task OnDataBound()
    {
        if(EmployeeData.Count > 0)
        {
            RecordText = "Loading records...";
        }
        else
        {
            RecordText = "No records to display";
        }
    }

    protected async Task Save(Employee employee)
    {
        EmpGrid.EndEdit();
    }

    protected async Task Cancel()
    {
        EmpGrid.CloseEdit();
    }

}
